bmp.EZH2[order(-bmp.EZH2$EZH2.score, -bmp.EZH2$log2FC.MutDMSO.WtDMSO),
!(names(bmp.EZH2) %in% c('mouse','human'))]
setwd("~/Desktop/temp/Fahrner lab/Data/Weaver/fahrner_weaver/RNAseq/final_analysis/BigStuff")
load(file='dds_final.rda')
res <- results(dds)
hist(res$pvalue[which(rownames(res) %in% mouse.target.all$mouse)],
freq=FALSE, breaks=50,
xlab='p-values (R684C/+ vs WT)',
main='EZH2 target genes',
ylim=c(0,4.5),
col='cornflowerblue',
cex.lab=1.5,
cex.axis=1.5,
cex.main=1.75)
hist(res$pvalue[!(rownames(res) %in% mouse_EZH2_target_all)],
freq=FALSE, breaks=50,
xlab='p-values (R684C/+ vs WT)',
main='non-EZH2 target genes',
ylim=c(0,4.5),
col='gray60',
cex.lab=1.5,
cex.axis=1.5,
cex.main=1.75)
hist(res$pvalue[!(rownames(res) %in% mouse.target.all$mouse)],
freq=FALSE, breaks=50,
xlab='p-values (R684C/+ vs WT)',
main='non-EZH2 target genes',
ylim=c(0,4.5),
col='gray60',
cex.lab=1.5,
cex.axis=1.5,
cex.main=1.75)
BiocManager::install()
citation("DESeq2")
citation("sva")
citation("biomart")
citation("biomaRt")
citation("GenomicRanges")
citation("BSgenome.Hsapiens.UCSC.hg19 ")
citation("BSgenome.Hsapiens.UCSC.hg19")
citation("EnsDb.Hsapiens.v75")
citation("tximeta")
setwd("/Volumes/Seagate_CWG")
gtf <- import('hg19_NMDetectiveB_Lindeboom_et_al.v2.gtf')
head(gtf)
gtf
table(gtf$nmd_score)
table(as.factor(gtf$nmd_score))
gtf
gtf
as.data.frame(gtf)
gr <- GRanges(seqnames='chr7', ranges=IRanges(start=148504464, end=148581441), strand='-')
subsetByOverlaps(gr, gtf)
subsetByOverlaps(gtf, gr)
gtf(which(gtf$gene_id=='uc003wfb.2'))
gtf[which(gtf$gene_id=='uc003wfb.2'),]
gtf[which(gtf$gene_id=='uc003wfb.2' & gtf$type=='CDS'),]
gtf[which(gtf$gene_id=='uc003wfb.2' & gtf$type=='CDS' & gtf$exon_number=='19'), nmd_score]
gtf[which(gtf$gene_id=='uc003wfb.2' & gtf$type=='CDS' & gtf$exon_number=='19'), gtf$nmd_score]
gtf[which(gtf$gene_id=='uc003wfb.2' & gtf$type=='CDS' & gtf$exon_number=='19'),]
gtf[which(gtf$gene_id=='uc003wfb.2' & gtf$type=='CDS' & gtf$exon_number=='19'),]$nmd_score
gtf[which(gtf$gene_id=='uc003wfb.2' & gtf$type=='CDS' & gtf$exon_number=='18'),]$nmd_score
str_split(gtf[which(gtf$gene_id=='uc003wfb.2' & gtf$type=='CDS' & gtf$exon_number=='18'),]$nmd_score,',')
table(str_split(gtf[which(gtf$gene_id=='uc003wfb.2' & gtf$type=='CDS' & gtf$exon_number=='18'),]$nmd_score,','))
table(str_split(gtf[which(gtf$gene_id=='uc003wfb.2' & gtf$type=='CDS' & gtf$exon_number=='13'),]$nmd_score,','))
for (x in 1:19) {table(str_split(gtf[which(gtf$gene_id=='uc003wfb.2' & gtf$type=='CDS' & gtf$exon_number=='x'),]$nmd_score,','))}
for (x in 1:19) {table(str_split(gtf[which(gtf$gene_id=='uc003wfb.2' & gtf$type=='CDS' & gtf$exon_number==x),]$nmd_score,','))}
for (x in 1:19) {table(str_split(gtf[which(gtf$gene_id=='uc003wfb.2' & gtf$type=='CDS' & gtf$exon_number=='x'),]$nmd_score,','))}
x <- 1
table(str_split(gtf[which(gtf$gene_id=='uc003wfb.2' & gtf$type=='CDS' & gtf$exon_number=='x'),]$nmd_score,','))
table(str_split(gtf[which(gtf$gene_id=='uc003wfb.2' & gtf$type=='CDS' & gtf$exon_number==x),]$nmd_score,','))
for (x in 1:19) {print(table(str_split(gtf[which(gtf$gene_id=='uc003wfb.2' & gtf$type=='CDS' & gtf$exon_number==x),]$nmd_score,',')))}
for (x in 1:30) {print(table(str_split(gtf[which(gtf$gene_id=='uc010beo.2' & gtf$type=='CDS' & gtf$exon_number==x),]$nmd_score,',')))}
gtf[which(gtf$gene_id=='uc010beo.2' & gtf$type=='CDS'),]
gtf[which(gtf$gene_id=='uc010beo.2'),]
gtf[which(gtf$gene_id=='uc001zwx.2'),]
for (x in 1:65) {print(table(str_split(gtf[which(gtf$gene_id=='uc001zwx.2' & gtf$type=='CDS' & gtf$exon_number==x),]$nmd_score,',')))}
table(str_split(gtf$nmd_score,','))
table(str_split(gtf$nmd_score[which(is.na(gtf$nmd_score)==FALSE)],','))
table(unlist(str_split(gtf$nmd_score[which(is.na(gtf$nmd_score)==FALSE)],',')))
gtfa <- import('hg19_NMDetectiveA_Lindeboom_et_al.v2.gtf')
head(gtfa)
table(unlist(str_split(gtfa$nmd_score[which(is.na(gtfa$nmd_score)==FALSE)],',')))
for (x in 1:19) {print(table(str_split(gtfa[which(gtfa$gene_id=='uc003wfb.2' & gtfa$type=='CDS' & gtfa$exon_number==x),]$nmd_score,',')))}
setwd("/Volumes/Macintosh HD/Users/greiderlab")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Desktop/temp/Fahrner lab/Data/Weaver/fahrner_weaver/RNAseq/final_analysis/BigStuff")
load(file='dds_final.rda')
counts.Wt <- counts(dds)[,dds$condition=='WT']
setwd("~/Desktop/temp/Fahrner lab/Data/Weaver/fahrner_weaver/RNAseq/final_analysis")
load(file='dds_collapsed_GSKJ4.rda')
counts.WtDMSO <- counts(dds)[,dds$genotype=='WT' & dds$tx=='DMSO']
intersect.counts.Wt <- counts.Wt[rownames(counts.Wt) %in% rownames(counts.WtDMSO),]
intersect.counts.WtDMSO <- counts.WtDMSO[rownames(counts.WtDMSO) %in% rownames(counts.Wt),]
par(pty='s')
plot(apply(intersect.counts.Wt,1,mean), apply(intersect.counts.WtDMSO,1,mean), log='xy',
pch=16, cex=0.5, col=alpha('gray50', 0.4),
xlab='Mean counts, Wt', ylab='Mean counts, WtDMSO')
dev.copy2pdf(file='plots_final/mean-counts_Wt_WtDMSO.pdf', width=6, height=6)
library(TxDb.Mmusculus.UCSC.mm10.ensGene)
library(tximport)
library(DESeq2)
library(sva)
library(biomaRt)
library(ggplot2)
library(ggrepel)
library(tximeta)
library(SummarizedExperiment)
library(edgeR)
library(limma)
library(statmod)
library(tidyverse)
library(tripack)
library(EnsDb.Mmusculus.v79)
library(BSgenome.Mmusculus.UCSC.mm10)
library(dplyr)
library(scales)
load(file='BigStuff/dds_final.rda')
res <- results(dds)
setwd("~/Desktop/temp/Fahrner lab/Data/Weaver/fahrner_weaver/RNAseq/final_analysis")
load(file='BigStuff/dds_final.rda')
res <- results(dds)
res[which(res$padj<0.1 & abs(res$log2FoldChange)>1),]
load(file='BigStuff/dds_final.rda')
load(file='BigStuff/dds.coll.filtered_untreated.rda')
load(file='mgi_ost.condense.ensembl.rda')
library(DGEobj.utils)
pca <- plotPCA(vst(dds.coll.filtered), returnData=TRUE)
pc.cor <- function(x){
cor(x, pca$PC1)
}
pc.cor.res <- apply(convertCounts(counts(dds), unit='CPM', log=TRUE),1,pc.cor)
pc.cor.df <- data.frame(ensembl_gene_id=names(pc.cor.res),
coeff=unname(pc.cor.res))
pc.cor.df.ost <- pc.cor.df[which(pc.cor.df$ensembl_gene_id %in% mgi_ost.condense.ensembl$gene_id),]
ost.annotate <- ensembl.annotate(pc.cor.df.ost$ensembl_gene_id)
get.ensembl <- function(x) {
edb_mouse <- EnsDb.Mmusculus.v79
proms_mouse <- promoters(edb_mouse,
filter = TxBiotypeFilter("protein_coding"),
upstream = 2000,
downstream = 2000,
columns = c("gene_name", "tx_id", "gene_id"))
genome(seqinfo(proms_mouse)) <- "mm10"
seqlevelsStyle(proms_mouse) <- "ucsc"
proms_mouse <- proms_mouse[which(seqnames(proms_mouse) %in% seqnames(Mmusculus)[1:21])]
proms_mouse$gene_name <- toupper(proms_mouse$gene_name)
x <- toupper(x)
x <- unique(x)
ensembl.ids <- as.data.frame(
unique(proms_mouse[which(proms_mouse$gene_name %in% x), c('gene_name','gene_id')]),
row.names=NULL)
ensembl.ids <- ensembl.ids[, c('gene_name','gene_id')] %>% distinct()
return(ensembl.ids)
}
ensembl.annotate <- function(ensembl.id){
ensembl102.mmusculus <- useEnsembl(biomart='genes', dataset='mmusculus_gene_ensembl', version=102)
mgi <- getBM(attributes=c('ensembl_gene_id','mgi_symbol','mgi_description'),
filters='ensembl_gene_id',
values=ensembl.id,
mart=ensembl102.mmusculus)
return(mgi)
}
pca <- plotPCA(vst(dds.coll.filtered), returnData=TRUE)
pc.cor <- function(x){
cor(x, pca$PC1)
}
pc.cor.res <- apply(convertCounts(counts(dds), unit='CPM', log=TRUE),1,pc.cor)
pc.cor.df <- data.frame(ensembl_gene_id=names(pc.cor.res),
coeff=unname(pc.cor.res))
pc.cor.df.ost <- pc.cor.df[which(pc.cor.df$ensembl_gene_id %in% mgi_ost.condense.ensembl$gene_id),]
ost.annotate <- ensembl.annotate(pc.cor.df.ost$ensembl_gene_id)
pc.cor.df.ost <- merge(pc.cor.df.ost, ost.annotate, by='ensembl_gene_id')
par(mar=c(1.35,1.1,0,0), mgp=c(0.5,0.075,0))
plot.new()
plot.window(xlim=c(-1,1), ylim=c(0,1.5))
lines(density(pc.cor.df$coeff, from=-1, to=1, bw=0.05, cut=0),
col='black', lwd=2)
axis(1, at=c(-1,1), tck=-0.02, cex.axis=0.7)
axis(2, at=c(0,1.4), tck=-0.02, cex.axis=0.7, pos=-1)
mtext('Correlation coefficient', side=1, line=0.3, cex=0.7)
mtext('Density', side=2, line=0.3, cex=0.7)
legend('top', legend=c('All genes'),
col=c("black"), lty=1, lwd=2, cex=0.7,
box.lty=0)
convertCounts(counts(dds), unit='CPM', log=TRUE)
counts(dds)
convertCounts(counts(dds), unit='CPM', log=FALSE)
load(file='BigStuff/dds_final.rda')
load(file='BigStuff/dds.coll.filtered_untreated.rda')
load(file='mgi_ost.condense.ensembl.rda')
library(DGEobj.utils)
pca <- plotPCA(vst(dds.coll.filtered), returnData=TRUE)
pc.cor <- function(x){
cor(x, pca$PC1)
}
pc.cor.res <- apply(convertCounts(counts(dds), unit='CPM', log=FALSE),1,pc.cor)
pc.cor.df <- data.frame(ensembl_gene_id=names(pc.cor.res),
coeff=unname(pc.cor.res))
pc.cor.df.ost <- pc.cor.df[which(pc.cor.df$ensembl_gene_id %in% mgi_ost.condense.ensembl$gene_id),]
ost.annotate <- ensembl.annotate(pc.cor.df.ost$ensembl_gene_id)
pc.cor.df.ost <- merge(pc.cor.df.ost, ost.annotate, by='ensembl_gene_id')
# setEPS()
# postscript(file='plots_final/density_PC1_all.eps', width=2.35, height=1.77)
par(mar=c(1.35,1.1,0,0), mgp=c(0.5,0.075,0))
plot.new()
plot.window(xlim=c(-1,1), ylim=c(0,1.5))
lines(density(pc.cor.df$coeff, from=-1, to=1, bw=0.05, cut=0),
col='black', lwd=2)
axis(1, at=c(-1,1), tck=-0.02, cex.axis=0.7)
axis(2, at=c(0,1.4), tck=-0.02, cex.axis=0.7, pos=-1)
mtext('Correlation coefficient', side=1, line=0.3, cex=0.7)
mtext('Density', side=2, line=0.3, cex=0.7)
legend('top', legend=c('All genes'),
col=c("black"), lty=1, lwd=2, cex=0.7,
box.lty=0)
# dev.off()
load(file='BigStuff/dds_final.rda')
load(file='BigStuff/dds.coll.filtered_untreated.rda')
load(file='mgi_ost.condense.ensembl.rda')
library(DGEobj.utils)
pca <- plotPCA(vst(dds.coll.filtered), returnData=TRUE)
pc.cor <- function(x){
cor(x, pca$PC1)
}
pc.cor.res <- apply(convertCounts(counts(dds), unit='CPM', log=FALSE),1,pc.cor)
pc.cor.df <- data.frame(ensembl_gene_id=names(pc.cor.res),
coeff=unname(pc.cor.res))
pc.cor.df.ost <- pc.cor.df[which(pc.cor.df$ensembl_gene_id %in% mgi_ost.condense.ensembl$gene_id),]
ost.annotate <- ensembl.annotate(pc.cor.df.ost$ensembl_gene_id)
pc.cor.df.ost <- merge(pc.cor.df.ost, ost.annotate, by='ensembl_gene_id')
# setEPS()
# postscript(file='plots_final/density_PC1_all.eps', width=2.35, height=1.77)
par(mar=c(1.35,1.1,0,0), mgp=c(0.5,0.075,0))
plot.new()
plot.window(xlim=c(-1,1), ylim=c(0,1.5))
lines(density(pc.cor.df$coeff, from=-1, to=1, bw=0.05, cut=0),
col='black', lwd=2)
axis(1, at=c(-1,1), tck=-0.02, cex.axis=0.7)
axis(2, at=c(0,1.4), tck=-0.02, cex.axis=0.7, pos=-1)
mtext('Correlation coefficient', side=1, line=0.3, cex=0.7)
mtext('Density', side=2, line=0.3, cex=0.7)
legend('top', legend=c('All genes'),
col=c("black"), lty=1, lwd=2, cex=0.7,
box.lty=0)
# dev.off()
par(mar=c(1.35,1.1,0,0), mgp=c(0.5,0.075,0))
init.df <- data.frame(matrix(ncol=0, nrow=512))
for (i in seq(1:100)) {
pc.cor.df.rand <- pc.cor.df[sample(1:nrow(pc.cor.df), 179, replace = FALSE),]
iter.density <- density(pc.cor.df.rand$coeff, from=-1, to=1, bw=0.05, cut=0)
init.df <- cbind(init.df, iter.density$y)
}
init.df.y <- rowMeans(init.df)
iter.density$y <- init.df.y
plot.new()
plot.window(xlim=c(-1,1), ylim=c(0,1.5))
init.df.sd <- apply(init.df,1,sd)
iter.density.upper <- iter.density
iter.density.upper$y <- init.df.y + init.df.sd
lines(iter.density.upper, col='gray80', lwd=2)
iter.density.lower <- iter.density
iter.density.lower$y <- init.df.y - init.df.sd
lines(iter.density.lower, col='gray80', lwd=2)
polygon(c(iter.density$x, rev(iter.density$x)), c(iter.density.upper$y, rev(iter.density.lower$y)), col='gray80', lty=0)
lines(iter.density, col='gray50', lwd=2)
lines(density(pc.cor.df.ost$coeff, from=-1, to=1, bw=0.05, cut=0), col='deepskyblue', lwd=2)
axis(1, at=c(-1,1), tck=-0.02, cex.axis=0.7)
axis(2, at=c(0,1.4), tck=-0.02, cex.axis=0.7, pos=-1)
mtext('Correlation coefficient', side=1, line=0.3, cex=0.7)
mtext('Density', side=2, line=0.3, cex=0.7)
legend('top', legend=c('Random subset, avg', 'MGI ost genes'),
col=c("gray50", "deepskyblue"), lty=c(1,1), lwd=2, cex=0.7,
box.lty=0)
load(file='BigStuff/dds_final.rda')
load(file='BigStuff/dds.coll.filtered_untreated.rda')
load(file='mgi_ost.condense.ensembl.rda')
library(DGEobj.utils)
pca <- plotPCA(vst(dds.coll.filtered), returnData=TRUE)
pc.cor <- function(x){
cor(x, pca$PC1)
}
pc.cor.res <- apply(convertCounts(counts(dds), unit='CPM', log=FALSE),1,pc.cor)
pc.cor.df <- data.frame(ensembl_gene_id=names(pc.cor.res),
coeff=unname(pc.cor.res))
pc.cor.df.ost <- pc.cor.df[which(pc.cor.df$ensembl_gene_id %in% mgi_ost.condense.ensembl$gene_id),]
ost.annotate <- ensembl.annotate(pc.cor.df.ost$ensembl_gene_id)
pc.cor.df.ost <- merge(pc.cor.df.ost, ost.annotate, by='ensembl_gene_id')
setEPS()
postscript(file='plots_final/density_PC1_all.eps', width=2.35, height=1.77)
par(mar=c(1.35,1.1,0,0), mgp=c(0.5,0.075,0))
plot.new()
plot.window(xlim=c(-1,1), ylim=c(0,1.5))
lines(density(pc.cor.df$coeff, from=-1, to=1, bw=0.05, cut=0),
col='black', lwd=2)
axis(1, at=c(-1,1), tck=-0.02, cex.axis=0.7)
axis(2, at=c(0,1.4), tck=-0.02, cex.axis=0.7, pos=-1)
mtext('Correlation coefficient', side=1, line=0.3, cex=0.7)
mtext('Density', side=2, line=0.3, cex=0.7)
legend('top', legend=c('All genes'),
col=c("black"), lty=1, lwd=2, cex=0.7,
box.lty=0)
dev.off()
setEPS()
postscript(file='plots_final/density_PC1_ost.eps', width=2.35, height=1.77)
par(mar=c(1.35,1.1,0,0), mgp=c(0.5,0.075,0))
init.df <- data.frame(matrix(ncol=0, nrow=512))
for (i in seq(1:100)) {
pc.cor.df.rand <- pc.cor.df[sample(1:nrow(pc.cor.df), 179, replace = FALSE),]
iter.density <- density(pc.cor.df.rand$coeff, from=-1, to=1, bw=0.05, cut=0)
init.df <- cbind(init.df, iter.density$y)
}
init.df.y <- rowMeans(init.df)
iter.density$y <- init.df.y
plot.new()
plot.window(xlim=c(-1,1), ylim=c(0,1.5))
init.df.sd <- apply(init.df,1,sd)
iter.density.upper <- iter.density
iter.density.upper$y <- init.df.y + init.df.sd
lines(iter.density.upper, col='gray80', lwd=2)
iter.density.lower <- iter.density
iter.density.lower$y <- init.df.y - init.df.sd
lines(iter.density.lower, col='gray80', lwd=2)
polygon(c(iter.density$x, rev(iter.density$x)), c(iter.density.upper$y, rev(iter.density.lower$y)), col='gray80', lty=0)
lines(iter.density, col='gray50', lwd=2)
lines(density(pc.cor.df.ost$coeff, from=-1, to=1, bw=0.05, cut=0), col='deepskyblue', lwd=2)
axis(1, at=c(-1,1), tck=-0.02, cex.axis=0.7)
axis(2, at=c(0,1.4), tck=-0.02, cex.axis=0.7, pos=-1)
mtext('Correlation coefficient', side=1, line=0.3, cex=0.7)
mtext('Density', side=2, line=0.3, cex=0.7)
legend('top', legend=c('Random subset, avg', 'MGI ost genes'),
col=c("gray50", "deepskyblue"), lty=c(1,1), lwd=2, cex=0.7,
box.lty=0)
dev.off()
load(file='BigStuff/dds_final.rda')
load(file='BigStuff/dds.coll.filtered_untreated.rda')
load(file='mgi_ost.condense.ensembl.rda')
library(DGEobj.utils)
pca <- plotPCA(vst(dds.coll.filtered), returnData=TRUE)
pc.cor <- function(x){
cor(x, pca$PC1)
}
pc.cor.res <- apply(convertCounts(counts(dds), unit='CPM', log=FALSE),1,pc.cor)
pc.cor.df <- data.frame(ensembl_gene_id=names(pc.cor.res),
coeff=unname(pc.cor.res))
pc.cor.df.ost <- pc.cor.df[which(pc.cor.df$ensembl_gene_id %in% mgi_ost.condense.ensembl$gene_id),]
ost.annotate <- ensembl.annotate(pc.cor.df.ost$ensembl_gene_id)
pc.cor.df.ost <- merge(pc.cor.df.ost, ost.annotate, by='ensembl_gene_id')
setEPS()
postscript(file='plots_final/density_PC1_all.eps', width=2.35, height=1.77)
par(mar=c(1.35,1.1,0,0), mgp=c(0.5,0.075,0))
plot.new()
plot.window(xlim=c(-1,1), ylim=c(0,1.5))
lines(density(pc.cor.df$coeff, from=-1, to=1, bw=0.05, cut=0),
col='black', lwd=2)
axis(1, at=c(-1,1), tck=-0.02, cex.axis=0.7)
axis(2, at=c(0,1.5), tck=-0.02, cex.axis=0.7, pos=-1)
mtext('Correlation coefficient', side=1, line=0.3, cex=0.7)
mtext('Density', side=2, line=0.3, cex=0.7)
legend('top', legend=c('All genes'),
col=c("black"), lty=1, lwd=2, cex=0.7,
box.lty=0)
dev.off()
setEPS()
postscript(file='plots_final/density_PC1_ost.eps', width=2.35, height=1.77)
par(mar=c(1.35,1.1,0,0), mgp=c(0.5,0.075,0))
init.df <- data.frame(matrix(ncol=0, nrow=512))
for (i in seq(1:100)) {
pc.cor.df.rand <- pc.cor.df[sample(1:nrow(pc.cor.df), 179, replace = FALSE),]
iter.density <- density(pc.cor.df.rand$coeff, from=-1, to=1, bw=0.05, cut=0)
init.df <- cbind(init.df, iter.density$y)
}
init.df.y <- rowMeans(init.df)
iter.density$y <- init.df.y
plot.new()
plot.window(xlim=c(-1,1), ylim=c(0,1.5))
init.df.sd <- apply(init.df,1,sd)
iter.density.upper <- iter.density
iter.density.upper$y <- init.df.y + init.df.sd
lines(iter.density.upper, col='gray80', lwd=2)
iter.density.lower <- iter.density
iter.density.lower$y <- init.df.y - init.df.sd
lines(iter.density.lower, col='gray80', lwd=2)
polygon(c(iter.density$x, rev(iter.density$x)), c(iter.density.upper$y, rev(iter.density.lower$y)), col='gray80', lty=0)
lines(iter.density, col='gray50', lwd=2)
lines(density(pc.cor.df.ost$coeff, from=-1, to=1, bw=0.05, cut=0), col='deepskyblue', lwd=2)
axis(1, at=c(-1,1), tck=-0.02, cex.axis=0.7)
axis(2, at=c(0,1.5), tck=-0.02, cex.axis=0.7, pos=-1)
mtext('Correlation coefficient', side=1, line=0.3, cex=0.7)
mtext('Density', side=2, line=0.3, cex=0.7)
legend('top', legend=c('Random subset, avg', 'MGI ost genes'),
col=c("gray50", "deepskyblue"), lty=c(1,1), lwd=2, cex=0.7,
box.lty=0)
dev.off()
load(file='BigStuff/dds_final.rda')
load(file='BigStuff/dds.coll.filtered_untreated.rda')
load(file='mgi_ost.condense.ensembl.rda')
library(DGEobj.utils)
pca <- plotPCA(vst(dds.coll.filtered), returnData=TRUE)
pc.cor <- function(x){
cor(x, pca$PC1)
}
pc.cor.res <- apply(convertCounts(counts(dds), unit='CPM', log=FALSE),1,pc.cor)
pc.cor.df <- data.frame(ensembl_gene_id=names(pc.cor.res),
coeff=unname(pc.cor.res))
pc.cor.df.ost <- pc.cor.df[which(pc.cor.df$ensembl_gene_id %in% mgi_ost.condense.ensembl$gene_id),]
ost.annotate <- ensembl.annotate(pc.cor.df.ost$ensembl_gene_id)
pc.cor.df.ost <- merge(pc.cor.df.ost, ost.annotate, by='ensembl_gene_id')
setEPS()
postscript(file='plots_final/density_PC1_all.eps', width=2.35, height=1.77)
par(mar=c(1.35,1.1,0.2,0), mgp=c(0.5,0.075,0))
plot.new()
plot.window(xlim=c(-1,1), ylim=c(0,1.5))
lines(density(pc.cor.df$coeff, from=-1, to=1, bw=0.05, cut=0),
col='black', lwd=2)
axis(1, at=c(-1,1), tck=-0.02, cex.axis=0.7)
axis(2, at=c(0,1.5), tck=-0.02, cex.axis=0.7, pos=-1)
mtext('Correlation coefficient', side=1, line=0.3, cex=0.7)
mtext('Density', side=2, line=0.3, cex=0.7)
legend('top', legend=c('All genes'),
col=c("black"), lty=1, lwd=2, cex=0.7,
box.lty=0)
dev.off()
setEPS()
postscript(file='plots_final/density_PC1_ost.eps', width=2.35, height=1.77)
par(mar=c(1.35,1.1,0.2,0), mgp=c(0.5,0.075,0))
init.df <- data.frame(matrix(ncol=0, nrow=512))
for (i in seq(1:100)) {
pc.cor.df.rand <- pc.cor.df[sample(1:nrow(pc.cor.df), 179, replace = FALSE),]
iter.density <- density(pc.cor.df.rand$coeff, from=-1, to=1, bw=0.05, cut=0)
init.df <- cbind(init.df, iter.density$y)
}
init.df.y <- rowMeans(init.df)
iter.density$y <- init.df.y
plot.new()
plot.window(xlim=c(-1,1), ylim=c(0,1.5))
init.df.sd <- apply(init.df,1,sd)
iter.density.upper <- iter.density
iter.density.upper$y <- init.df.y + init.df.sd
lines(iter.density.upper, col='gray80', lwd=2)
iter.density.lower <- iter.density
iter.density.lower$y <- init.df.y - init.df.sd
lines(iter.density.lower, col='gray80', lwd=2)
polygon(c(iter.density$x, rev(iter.density$x)), c(iter.density.upper$y, rev(iter.density.lower$y)), col='gray80', lty=0)
lines(iter.density, col='gray50', lwd=2)
lines(density(pc.cor.df.ost$coeff, from=-1, to=1, bw=0.05, cut=0), col='deepskyblue', lwd=2)
axis(1, at=c(-1,1), tck=-0.02, cex.axis=0.7)
axis(2, at=c(0,1.5), tck=-0.02, cex.axis=0.7, pos=-1)
mtext('Correlation coefficient', side=1, line=0.3, cex=0.7)
mtext('Density', side=2, line=0.3, cex=0.7)
legend('top', legend=c('Random subset, avg', 'MGI ost genes'),
col=c("gray50", "deepskyblue"), lty=c(1,1), lwd=2, cex=0.7,
box.lty=0)
dev.off()
load(file='mgi_ost.condense.ensembl.rda')
load(file='mgi_condense.ensembl.rda')
View(pc.cor)
mgi_ost.condense.ensembl <- mgi_ost.condense.ensembl$gene_id %in% rownames(res)
mgi_ost.condense.ensembl <- mgi_ost.condense.ensembl[which(mgi_ost.condense.ensembl$gene_id %in% rownames(res)),]$gene_id
load(file='mgi_ost.condense.ensembl.rda')
mgi_ost.condense.ensembl <- mgi_ost.condense.ensembl[which(mgi_ost.condense.ensembl$gene_id %in% rownames(res)),]$gene_id
table(mgi_condense.ensembl %in% mgi_ost.condense.ensembl)
load(file='dds_collapsed_GSKJ4.rda')
load(file='BigStuff/dds_final_GSKJ4.rda')
ensembl.annotate <- function(ensembl.id){
ensembl102.mmusculus <- useEnsembl(biomart='genes', dataset='mmusculus_gene_ensembl', version=102)
mgi <- getBM(attributes=c('ensembl_gene_id','mgi_symbol','mgi_description'),
filters='ensembl_gene_id',
values=ensembl.id,
mart=ensembl102.mmusculus)
return(mgi)
}
cor(counts(dds)['ENSMUSG00000001506',], alizarin$absorbance) # Col1a1
alizarin <- data.frame(sample=gsub("_S.*", "", colnames(dds)),
absorbance=as.numeric(levels(dds$alizarin))[dds$alizarin])
head(alizarin)
alizarin
counts.CPM <- convertCounts(counts(dds), unit='CPM', log=FALSE)
head(counts.CPM)
cor(counts.CPM['ENSMUSG00000001506',], alizarin$absorbance)
counts.CPM <- convertCounts(counts(dds), unit='CPM', log=FALSE)
cor(counts.CPM['ENSMUSG00000001506',], alizarin$absorbance) # Col1a1
cor(counts.CPM['ENSMUSG00000057666',], alizarin$absorbance) # Gapdh
aliz.cor <- function(x){
cor(x, alizarin$absorbance)
}
aliz.res <- apply(counts.CPM,1,aliz.cor)
aliz.res.df <- data.frame(ensembl_gene_id=names(aliz.res),
coeff=unname(aliz.res))
head(aliz.res.df)
aliz.annotation <- ensembl.annotate(aliz.res.df$ensembl_gene_id)
aliz.res.df <- merge(aliz.res.df, aliz.annotation, by='ensembl_gene_id', all=TRUE)
save(aliz.res.df, file='aliz.res.df.rda')
write.csv(aliz.res.df[which(aliz.res.df$coeff>0.85),], file='aliz.res.df.csv')
load(file='mgi_ost.condense.ensembl.rda')
test <- aliz.res.df[which(aliz.res.df$coeff>0.85),]
table(test$ensembl_gene_id %in% mgi_ost.condense.ensembl$gene_id)
test[which(test$ensembl_gene_id %in% mgi_ost.condense.ensembl$gene_id),]
test <- test[which(test$ensembl_gene_id %in% mgi_ost.condense.ensembl$gene_id),]
test[order(test$coeff, decreasing=TRUE),]
aliz.res.df[which(aliz.res.df$coeff>0.90),]
aliz.res.df <- aliz.res.df[order(aliz.res.df$coeff, descending=TRUE),]
aliz.res.df[order(aliz.res.df$coeff, descending=TRUE),]
aliz.res.df$coeff
length(aliz.res.df$coeff)
aliz.res.df[order(aliz.res.df$coeff),]
aliz.res.df[order(aliz.res.df$coeff, descending=TRUE),]
aliz.res.df <- aliz.res.df[order(aliz.res.df$coeff, decreasing=TRUE),]
aliz.res.df[1:20,]
test <- aliz.res.df[1:20,]
table(test$ensembl_gene_id %in% mgi_ost.condense.ensembl)
table(test$ensembl_gene_id %in% mgi_ost.condense.ensembl$gene_id)
